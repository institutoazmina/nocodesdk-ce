---
name: Create and publish the Docker image and deploy the application

on:
  workflow_dispatch:
  push:
    branches: ['main']

env:
  IMAGE_NAME: ghcr.io/institutoazmina/nocodesdk

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME  }}:latest,${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline

  update-running-image-on-server:
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${SSH_KEY}" > ~/.ssh/server.key
          chmod 600 ~/.ssh/server.key
          cat >>~/.ssh/config <<END
          Host server
            HostName ${SSH_HOST}
            User ${SSH_USER}
            IdentityFile ~/.ssh/server.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Copy compose file
        run: rsync compose.yaml server:/home/ubuntu/nocodesdk/compose.yaml

      - name: Download the latest image
        run: ssh server 'echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u USERNAME --password-stdin ; docker compose -f /home/ubuntu/nocodesdk/compose.yaml pull'

      - name: Reload the docker stack
        run: ssh server 'docker compose -f /home/ubuntu/nocodesdk/compose.yaml up -d'

      - name: Clean old unused images
        run: ssh server 'docker image prune -f'
